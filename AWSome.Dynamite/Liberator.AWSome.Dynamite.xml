<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Liberator.AWSome.Dynamite</name>
    </assembly>
    <members>
        <member name="T:Liberator.AWSome.Dynamite.Client.DynamoService`1">
            <summary>
            The service for the DynamoDB
            </summary>
            <typeparam name="TObject">The type of object being used</typeparam>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Client.DynamoService`1.ObjectReference">
            <summary>
            Instance of the Service objecvt
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.ValidateTableConnection(System.String)">
            <summary>
            Validates that the table can be accessed via the connection
            </summary>
            <param name="tableName">The name of the table to be validated</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.AddRow(System.String,`0)">
            <summary>
            Adds a single row to a Dynamo DB table
            </summary>
            <param name="tableName">The name of the table to which a row is to be added</param>
            <param name="objectReference">The row based object to create in the Dynamo DB</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.UpdateRecord(System.String,`0)">
            <summary>
            Updates a record within a Dynamo DB table using a row based object
            </summary>
            <param name="tableName">The name of the table containing the row to update</param>
            <param name="objectReference">The row based object to update in the Dynamo DB</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.GetRecords(System.String,Amazon.DynamoDBv2.DocumentModel.Filter)">
            <summary>
            Gets records in a named DynamoDB table, if no filter has been set method will get all records
            </summary>
            <param name="tableName">The name of the table to retrieve</param>
            <param name="filter">The query or scan filter to be used to return objects with certain filters</param>
            <returns>A collection of row based objects which represent the data in the table</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.CreateQueryFilterParameter(Amazon.DynamoDBv2.DocumentModel.QueryFilter@,System.String,Amazon.DynamoDBv2.DocumentModel.QueryOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a query parameter for a Dynamo DB query
            </summary>
            <param name="queryFilter">An existing filter. If null, this will be created.</param>
            <param name="attribute">The attribute to be queried</param>
            <param name="queryOperator">The operator to use in the query</param>
            <param name="values">The values to be used in the query</param>
            <returns>A populated query filter object</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.AddScanFilterParameter(Amazon.DynamoDBv2.DocumentModel.ScanFilter,System.String,Amazon.DynamoDBv2.DocumentModel.ScanOperator,System.Collections.Generic.List{Amazon.DynamoDBv2.Model.AttributeValue})">
            <summary>
            Adds a scan parameter for Dynamo DB query
            </summary>
            <param name="scanFilter">An existing filter. If null, this will be created</param>
            <param name="attribute">The attribute to be scanned</param>
            <param name="scanOperator">The operator to use in the scan</param>
            <param name="values">The values to be used in the scan</param>
            <returns>A populated scan filter object</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.DynamoService`1.DeleteAllItems(System.String,System.String,System.String)">
            <summary>
            Method to delete all items in a dynamo with a particular key
            </summary>
            <param name="tableName">Name of table to delete items from</param>
            <param name="keyName">Name of key which will be used to delete all items with it</param>
            <param name="sortkey"></param>
        </member>
        <member name="T:Liberator.AWSome.Dynamite.Client.Service">
            <summary>
            The abstract class on which a service is based
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.createTableMessage">
            <summary>
            The message to display when creating a table
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.updateTableMessage">
            <summary>
            The message to display when updating a table
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.deleteTableMessage">
            <summary>
            The message to display when deleting a table
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.keySchemaElements">
            <summary>
            Lists the Key Schema for the Dynamo DB table
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.attributeDefinitions">
            <summary>
            Lists the Attribute Definitions for the Dynamo DB table
            </summary>
        </member>
        <member name="F:Liberator.AWSome.Dynamite.Client.Service.tableDescription">
            <summary>
            The description of the table under investigation
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.#ctor">
            <summary>
            Default constructor for the Service class used to communicate with Dynamo DB
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.CreateTable(System.String)">
            <summary>
            Creates a Dynamo DB Table
            </summary>
            <param name="tableName">The name of the table to be created</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.UpdateTable(System.String)">
            <summary>
            Updates a Dynamo DB table definition
            </summary>
            <param name="tableName">The name of the table to be updated</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.DeleteTable(System.String)">
            <summary>
            Deletes a Dynamo DB Table
            </summary>
            <param name="tableName">The name of the table to be deleted</param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.GetListOfTables">
            <summary>
            Gets a list of the all tables in the connected Dynamo database
            </summary>
            <returns>A list containing the names of the tables within the Dynamo DB</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.GetDetailsForTables">
            <summary>
            Outputs the details for each table in Dynamo DB to the console
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.AddKeySchemaElement(System.String,Amazon.DynamoDBv2.KeyType)">
            <summary>
            Adds a key schema element to the collection which is used to add keys to the database table
            </summary>
            <param name="attributeName"></param>
            <param name="keyType"></param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.AddAttributeDefinition(System.String,Amazon.DynamoDBv2.ScalarAttributeType)">
            <summary>
            
            </summary>
            <param name="attributeName"></param>
            <param name="scalarAttributeType"></param>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.StreamSpecification">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.SSESpecification">
            <summary>
            Creates an SSE Specification for the table under investigation
            </summary>
            <returns>An object representing the SSE Specification</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Client.Service.GetTableStatus(Amazon.DynamoDBv2.Model.CreateTableResponse)">
            <summary>
            Gets the status of the table under investigation
            </summary>
            <param name="createTableResponse">The response from the create table request</param>
            <returns>An object representing the status of the table</returns>
        </member>
        <member name="T:Liberator.AWSome.Dynamite.Config.Preferences">
            <summary>
            Preferences for the library
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.UserAWSCredentials">
            <summary>
            Contains the user's AWS credentials
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.RegionEndpoint">
            <summary>
            Contains the currently used Region Endpoint
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.AWSProfileName">
            <summary>
            The profile name being used by AWSome
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.StreamEnabled">
            <summary>
            Whether streaming has been enableds
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.StreamViewType">
            <summary>
            The type of stream view to be used
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.SSEEnabled">
            <summary>
            Whether SSE has been enabled
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.KMSMasterKeyId">
            <summary>
            The ID of an AWS managed customer master key
            </summary>
        </member>
        <member name="P:Liberator.AWSome.Dynamite.Config.Preferences.SSEType">
            <summary>
            The type of SSE to use
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Config.Preferences.#cctor">
            <summary>
            Sets the Preferences based on the configuration file
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Config.Preferences.GetDynamoDbClient">
            <summary>
            Gets the DynamoDB Client set in the App.config file
            </summary>
            <returns>The Dynamo DB Client as configured</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Config.Preferences.GetAWSCredentials">
            <summary>
            Gets the user's AWS credentials from their credential profile store chain
            </summary>
            <returns>The AWS credentials for the user</returns>
        </member>
        <member name="T:Liberator.AWSome.Dynamite.Objects.TableObject">
            <summary>
            Abstract basis for a table object
            </summary>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Objects.TableObject.GetDocument">
            <summary>
            Gets the document that represent the Dynamo DB row
            </summary>
            <returns>A document representing a Dynamo DB row</returns>
        </member>
        <member name="M:Liberator.AWSome.Dynamite.Objects.TableObject.Populate(Amazon.DynamoDBv2.DocumentModel.Document)">
            <summary>
            Populates a dynamo request with the contents of a document
            </summary>
            <param name="keyValuePairs">The document object (as key value pairs)</param>
        </member>
    </members>
</doc>
